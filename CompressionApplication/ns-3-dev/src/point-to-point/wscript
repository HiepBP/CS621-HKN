## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def configure(conf):

    have_libxml2 = conf.check_cfg(package='libxml-2.0', atleast_version='2.7',
                                  args=['--cflags', '--libs'], uselib_store='LIBXML2',
                                  mandatory=False)

    conf.env['ENABLE_LIBXML2'] = have_libxml2
    conf.report_optional_feature("XmlIo", "XmlIo",
                                 conf.env['ENABLE_LIBXML2'],
                                 "library 'libxml-2.0 >= 2.7' not found")

def build(bld):
    module = bld.create_ns3_module('point-to-point', ['network', 'mpi'])
    module.env.append_value('CPPPATH', '-I/usr/include/libxml2')
    module.source = [
        'model/point-to-point-net-device.cc',
        'model/point-to-point-channel.cc',
        'model/point-to-point-remote-channel.cc',
        'model/ppp-header.cc',
        'helper/point-to-point-helper.cc',
        ]

    module.use.append('LIBXML2')

    module_test = bld.create_ns3_module_test_library('point-to-point')
    module_test.source = [
        'test/point-to-point-test.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'point-to-point'
    headers.source = [
        'model/point-to-point-net-device.h',
        'model/point-to-point-channel.h',
        'model/point-to-point-remote-channel.h',
        'model/ppp-header.h',
        'helper/point-to-point-helper.h',
        ]

    if (bld.env['ENABLE_EXAMPLES']):
        bld.recurse('examples')

    bld.ns3_python_bindings()

